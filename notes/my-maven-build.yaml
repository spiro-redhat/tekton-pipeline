apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: my-mvn-package
spec:
  stepTemplate:
    env:
      - name: "HOME"
        value: "/tekton/home"
  resources:
    inputs:
      - name: source
        type: git
    outputs: 
      - name: intermediate-image
        type: image 
  params:
    - name: PATH_CONTEXT
      description: xxxxxx
      type: string
      default: .
    - name: MAVEN_ARGS_APPEND
      description: Additional Maven arguments
      type: string
      default: '-DskipTests'
    - name: MAVEN_MIRROR_URL
      description: The base URL of a mirror used for retrieving artifacts
      type: string
      default: ''
    - name: MAVEN_CLEAR_REPO
      description: Remove the Maven repository after the artifact is built
      type: string
      default: 'false'
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint
      type: string
      default: 'false'
    - name: STORAGE_DRIVER
      description: The Buildah storage STORAGE_DRIVER
      type: string
      default: vfs
  steps:
    - name: gen-env-file
      command:
        - /bin/sh
        - '-c'
      args:
        - |-
          echo "MAVEN_CLEAR_REPO=$(params.MAVEN_CLEAR_REPO)" > env-file
          [[ '$(params.MAVEN_ARGS_APPEND)' != "" ]] &&
            echo "MAVEN_ARGS_APPEND=$(params.MAVEN_ARGS_APPEND)" >> env-file
          [[ '$(params.MAVEN_MIRROR_URL)' != "" ]] &&
            echo "MAVEN_MIRROR_URL=$(params.MAVEN_MIRROR_URL)" >> env-file
          echo "Generated Env file"
          echo "------------------------------"
          cat env-file
          echo "------------------------------"
          echo $HOME 
          pwd 
          ls -al /tekton/home/.docker/
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      volumeMounts:
        - name: envparams
          mountPath: /env-params
      workingDir: /workspace 
    - name: generate
      command:
        - s2i
        - build
        - $(params.PATH_CONTEXT)
        - registry.redhat.io/jboss-eap-7/eap74-openjdk11-runtime-openshift-rhel8
        - '--image-scripts-url'
        - 'image:///usr/local/s2i'
        - '--as-dockerfile'
        - /gen-source/Dockerfile.gen
        - '--environment-file'
        - /env-params/env-file
      image: registry.redhat.io/ocp-tools-43-tech-preview/source-to-image-rhel8
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
        - name: envparams
          mountPath: /env-params
      workingDir: /workspace/source
    - name: build
      command:
        - buildah
        - bud
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--layers'
        - '-f'
        - /gen-source/Dockerfile.gen
        - '-t'
        - $(resources.outputs.intermediate-image.url)
        - .
      image: registry.redhat.io/rhel8/buildah@sha256:6a68ece207bc5fd8db2dd5cc2d0b53136236fb5178eb5b71eebe5d07a3c33d13
      resources: {}
      volumeMounts:
        - name: pipeline-cache
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
      workingDir: /gen-source
  volumes:
    - emptyDir: {}
      name: envparams
    - emptyDir: {}
      name: gen-source
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: pipeline-cache-pvc
    